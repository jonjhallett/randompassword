#!/bin/bash

set -euo pipefail

main() {
        run_test_functions
}

run_test_functions() {
        for test_function in $(compgen -A function test_); do
	(
		set -x
                "$test_function"
	)
        done
}

test_script_style() {
	shellcheck randompassword
}

test_default_password_length() {
	bash randompassword | grep -q '^[a-zA-Z0-9]\{43\}$'
}

test_12char_password() {
	bash randompassword 12 | grep -q '^[a-zA-Z0-9]\{12\}$'
}

test_more_than_one_argument() {
	local error_message exit_value
	set +e
	error_message="$(bash randompassword 1 1 2>&1)"
	exit_value=$?
	set -e
	[ $exit_value -eq 1 ]
	echo "$error_message" | grep -q '^Usage: randompassword \[PASSWORD_LENGTH]$'
}

test_argument_not_a_number() {
	local error_message exit_value
	set +e
	error_message="$(bash randompassword not_a_number 2>&1)"
	exit_value=$?
	set -e
	[ $exit_value -eq 2 ]
	echo "$error_message" | grep -q '^randompassword: password length must be a positive integer$'
}

test_argument_less_than_one() {
	local error_message exit_value
	set +e
	error_message="$(bash randompassword 0 2>&1)"
	exit_value=$?
	set -e
	[ $exit_value -eq 2 ]
	echo "$error_message" | grep -q '^randompassword: password length must be a positive integer$'
}

main
